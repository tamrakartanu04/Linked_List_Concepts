#include <unordered_map>
class Solution {
  private:
    void insertAtTail(Node* &head , Node* &tail , int val){
        Node* temp = new Node(val) ;
        if(head==NULL){
            head = temp ;
            tail = temp ;
            return ;
        }
        else{
            tail->next = temp ;
            tail = temp ;
            return ;
        }
    }
  
  
  public:
    Node *copyList(Node *head) {
        Node* cloneHead = NULL ;
        Node* cloneTail = NULL ;
        
        // step 1 : copy next pointer 
        Node* temp = head ;
        while(temp!=NULL){
            insertAtTail(cloneHead , cloneTail , temp->data) ;
            temp = temp->next ;
        }
        
        //  step 2 : store mapping 
        unordered_map<Node* , Node*> oldToNew  ;
        Node* original = head ;
        Node* clone = cloneHead ;
        while(original!=NULL){
            oldToNew[original] = clone ;
            original = original->next ;
            clone = clone->next ;
        }
        
        // step 3 : point random pointer 
        original = head ;
        clone = cloneHead ;
        while(original!=NULL){
            clone->random = oldToNew[original->random] ;
            original = original->next ;
            clone = clone->next ;
        }
        return cloneHead ;
    }
};
